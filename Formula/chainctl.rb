# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Chainctl < Formula
  desc "CLI for the Chainguard Platform"
  homepage "https://chainguard.dev"
  version "0.1.49"

  on_macos do
    if Hardware::CPU.intel?
      url "https://dl.enforce.dev/chainctl/0.1.49/chainctl_darwin_x86_64"
      sha256 "c1d4bf9a411ac492f8a6908784f94bec8e9454f451e78a30c9f9a93e894fba6f"

      def install
        bin.install "chainctl_darwin_x86_64" => "chainctl"

        bash_output = Utils.safe_popen_read(bin/"chainctl", "completion", "bash")
        (bash_completion/"chainctl").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"chainctl", "completion", "zsh")
        (zsh_completion/"_chainctl").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"chainctl", "completion", "fish")
        (fish_completion/"chainctl.fish").write fish_output
      end
    end
    if Hardware::CPU.arm?
      url "https://dl.enforce.dev/chainctl/0.1.49/chainctl_darwin_arm64"
      sha256 "c4949ba10e8edb99b20e94fd63a96f9eac04ce8faa7f77735857b8a2981ecd15"

      def install
        bin.install "chainctl_darwin_arm64" => "chainctl"

        bash_output = Utils.safe_popen_read(bin/"chainctl", "completion", "bash")
        (bash_completion/"chainctl").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"chainctl", "completion", "zsh")
        (zsh_completion/"_chainctl").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"chainctl", "completion", "fish")
        (fish_completion/"chainctl.fish").write fish_output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://dl.enforce.dev/chainctl/0.1.49/chainctl_linux_x86_64"
      sha256 "caafb5c344f22a6eaae354025f21a9528e337fe8db0c843af0c98f7c72a65be7"

      def install
        bin.install "chainctl_linux_x86_64" => "chainctl"

        bash_output = Utils.safe_popen_read(bin/"chainctl", "completion", "bash")
        (bash_completion/"chainctl").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"chainctl", "completion", "zsh")
        (zsh_completion/"_chainctl").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"chainctl", "completion", "fish")
        (fish_completion/"chainctl.fish").write fish_output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://dl.enforce.dev/chainctl/0.1.49/chainctl_linux_arm64"
      sha256 "a3a10f26d57e093cb9a6242e3fb931fbec2e3ca959452c79b794d8f0369d9bdb"

      def install
        bin.install "chainctl_linux_arm64" => "chainctl"

        bash_output = Utils.safe_popen_read(bin/"chainctl", "completion", "bash")
        (bash_completion/"chainctl").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"chainctl", "completion", "zsh")
        (zsh_completion/"_chainctl").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"chainctl", "completion", "fish")
        (fish_completion/"chainctl.fish").write fish_output
      end
    end
  end

  test do
    system "#{bin}/chainctl version"
  end
end
