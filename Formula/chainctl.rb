# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Chainctl < Formula
  desc "CLI for the Chainguard Platform"
  homepage "https://chainguard.dev"
  version "0.1.50"

  on_macos do
    if Hardware::CPU.intel?
      url "https://dl.enforce.dev/chainctl/0.1.50/chainctl_darwin_x86_64"
      sha256 "b3ae672cd7edef6d754f904e60fc70b70e40ab719e519c2f7542e3459ac2b40d"

      def install
        bin.install "chainctl_darwin_x86_64" => "chainctl"

        bash_output = Utils.safe_popen_read(bin/"chainctl", "completion", "bash")
        (bash_completion/"chainctl").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"chainctl", "completion", "zsh")
        (zsh_completion/"_chainctl").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"chainctl", "completion", "fish")
        (fish_completion/"chainctl.fish").write fish_output
      end
    end
    if Hardware::CPU.arm?
      url "https://dl.enforce.dev/chainctl/0.1.50/chainctl_darwin_arm64"
      sha256 "f215fc087d11eb4af1d686aa4cf64a1fad9b9b2f816061e8e5a72b07492eb7bf"

      def install
        bin.install "chainctl_darwin_arm64" => "chainctl"

        bash_output = Utils.safe_popen_read(bin/"chainctl", "completion", "bash")
        (bash_completion/"chainctl").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"chainctl", "completion", "zsh")
        (zsh_completion/"_chainctl").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"chainctl", "completion", "fish")
        (fish_completion/"chainctl.fish").write fish_output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://dl.enforce.dev/chainctl/0.1.50/chainctl_linux_x86_64"
      sha256 "4932fbb429d195489c3de2b74eadd945a0f942e32b2453d4aeff980b3bc5a5ca"

      def install
        bin.install "chainctl_linux_x86_64" => "chainctl"

        bash_output = Utils.safe_popen_read(bin/"chainctl", "completion", "bash")
        (bash_completion/"chainctl").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"chainctl", "completion", "zsh")
        (zsh_completion/"_chainctl").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"chainctl", "completion", "fish")
        (fish_completion/"chainctl.fish").write fish_output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://dl.enforce.dev/chainctl/0.1.50/chainctl_linux_arm64"
      sha256 "29dfe63f2ca87d11e91a45409ef67e371e8496f1b123388281199a20617442ce"

      def install
        bin.install "chainctl_linux_arm64" => "chainctl"

        bash_output = Utils.safe_popen_read(bin/"chainctl", "completion", "bash")
        (bash_completion/"chainctl").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"chainctl", "completion", "zsh")
        (zsh_completion/"_chainctl").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"chainctl", "completion", "fish")
        (fish_completion/"chainctl.fish").write fish_output
      end
    end
  end

  test do
    system "#{bin}/chainctl version"
  end
end
